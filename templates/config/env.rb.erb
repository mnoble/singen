module <%= name.classify %>
  class Env
    def self.load
      env_file = Config.env.development? ? "" : ".#{Config.env}"
      source   = File.read(Config.root.join(".env#{env_file}"))
      ENV.update(parse(source))
    end

    def self.parse(source)
      source.lines.map { |line| line.chomp.split("=") }.to_h
    end

    def to_s
      ENV.fetch("RACK_ENV", "development")
    end

    def inspect
      to_s
    end

    def respond_to_missing?(name, *args)
      name.to_s.end_with?("?")
    end

    def method_missing(name, *args, &block)
      respond_to_missing?(name) ? to_s == name.to_s.gsub("?", "") : super
    end
  end
end
